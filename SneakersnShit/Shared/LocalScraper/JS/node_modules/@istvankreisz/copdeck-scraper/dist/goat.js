"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var types_1 = require("./types");
var typeUtils_1 = require("./typeUtils");
var superstruct_1 = require("superstruct");
var utils_1 = require("./utils");
var browserConfigs_1 = require("./browserConfigs");
var GoatScraper = /** @class */ (function () {
    function GoatScraper() {
        var _this = this;
        this.store = 'goat';
        this.sendDummyRequest = function (storeInfo, apiConfig) { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.fetcher.sendRequest(storeInfo.url, 'GET', this.config.browser.headers.goat2, this.config.userAgent, undefined, undefined, this.config.proxy, undefined, apiConfig.isLoggingEnabled)];
            });
        }); };
        this.resetConfig = function (apiConfig, forced, storeInfo) { return __awaiter(_this, void 0, void 0, function () {
            var cookie;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (forced) {
                            this.generateNewConfig();
                        }
                        if (!storeInfo) return [3 /*break*/, 2];
                        return [4 /*yield*/, utils_1.getSetCookieHeader(this.sendDummyRequest(storeInfo, apiConfig))];
                    case 1:
                        cookie = _a.sent();
                        this.config.cookie = cookie.cookie;
                        this.config.csrf = cookie.csrf;
                        _a.label = 2;
                    case 2: return [2 /*return*/];
                }
            });
        }); };
        this.setCookies = function (apiConfig, storeInfo) { return __awaiter(_this, void 0, void 0, function () {
            var err_1, err_2, err_3;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 11]);
                        return [4 /*yield*/, this.resetConfig(apiConfig, false, storeInfo)];
                    case 1:
                        _a.sent();
                        typeUtils_1.log('got it 1', apiConfig.isLoggingEnabled);
                        return [3 /*break*/, 11];
                    case 2:
                        err_1 = _a.sent();
                        _a.label = 3;
                    case 3:
                        _a.trys.push([3, 5, , 10]);
                        return [4 /*yield*/, this.resetConfig(apiConfig, true, storeInfo)];
                    case 4:
                        _a.sent();
                        typeUtils_1.log('got it 2', apiConfig.isLoggingEnabled);
                        return [3 /*break*/, 10];
                    case 5:
                        err_2 = _a.sent();
                        _a.label = 6;
                    case 6:
                        _a.trys.push([6, 8, , 9]);
                        return [4 /*yield*/, this.resetConfig(apiConfig, true, storeInfo)];
                    case 7:
                        _a.sent();
                        typeUtils_1.log('got it 3', apiConfig.isLoggingEnabled);
                        return [3 /*break*/, 9];
                    case 8:
                        err_3 = _a.sent();
                        typeUtils_1.log("failed to fetch cookies", apiConfig.isLoggingEnabled);
                        typeUtils_1.log(err_3, apiConfig.isLoggingEnabled);
                        return [3 /*break*/, 9];
                    case 9: return [3 /*break*/, 10];
                    case 10: return [3 /*break*/, 11];
                    case 11: return [2 /*return*/];
                }
            });
        }); };
        this.setUpConfig = function (apiConfig, storeInfo) { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.setProxies(apiConfig);
                        if (!this.config.isValid) return [3 /*break*/, 6];
                        if (!storeInfo) return [3 /*break*/, 4];
                        if (!this.config.cookie) return [3 /*break*/, 1];
                        return [2 /*return*/];
                    case 1: return [4 /*yield*/, this.setCookies(apiConfig, storeInfo)];
                    case 2:
                        _a.sent();
                        _a.label = 3;
                    case 3: return [3 /*break*/, 5];
                    case 4: return [2 /*return*/];
                    case 5: return [3 /*break*/, 8];
                    case 6:
                        this.generateNewConfig();
                        if (!storeInfo) return [3 /*break*/, 8];
                        return [4 /*yield*/, this.setCookies(apiConfig, storeInfo)];
                    case 7:
                        _a.sent();
                        _a.label = 8;
                    case 8: return [2 /*return*/];
                }
            });
        }); };
        this.getData = function (apiConfig, request, storeInfo) { return __awaiter(_this, void 0, void 0, function () {
            var res, err_4, err_5, err_6;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 16]);
                        return [4 /*yield*/, request()];
                    case 1:
                        res = _a.sent();
                        return [3 /*break*/, 16];
                    case 2:
                        err_4 = _a.sent();
                        this.config.isValid = false;
                        return [4 /*yield*/, this.setUpConfig(apiConfig, storeInfo)];
                    case 3:
                        _a.sent();
                        _a.label = 4;
                    case 4:
                        _a.trys.push([4, 7, , 15]);
                        return [4 /*yield*/, typeUtils_1.randomDelay()];
                    case 5:
                        _a.sent();
                        return [4 /*yield*/, request()];
                    case 6:
                        res = _a.sent();
                        return [3 /*break*/, 15];
                    case 7:
                        err_5 = _a.sent();
                        this.config.isValid = false;
                        if (!storeInfo) return [3 /*break*/, 8];
                        typeUtils_1.log('failed request', apiConfig.isLoggingEnabled);
                        typeUtils_1.log(err_5, apiConfig.isLoggingEnabled);
                        throw err_5;
                    case 8: return [4 /*yield*/, this.setUpConfig(apiConfig, storeInfo)];
                    case 9:
                        _a.sent();
                        _a.label = 10;
                    case 10:
                        _a.trys.push([10, 13, , 14]);
                        return [4 /*yield*/, typeUtils_1.randomDelay()];
                    case 11:
                        _a.sent();
                        return [4 /*yield*/, request()];
                    case 12:
                        res = _a.sent();
                        return [3 /*break*/, 14];
                    case 13:
                        err_6 = _a.sent();
                        this.config.isValid = false;
                        throw err_6;
                    case 14: return [3 /*break*/, 15];
                    case 15: return [3 /*break*/, 16];
                    case 16: return [2 /*return*/, res];
                }
            });
        }); };
        this.generateNewConfig();
    }
    GoatScraper.prototype.set = function (fetcher) {
        this.fetcher = fetcher;
    };
    GoatScraper.prototype.generateNewConfig = function () {
        var browserConfig = typeUtils_1.randomElement(browserConfigs_1.browsers);
        this.config = {
            browser: browserConfig,
            userAgent: typeUtils_1.getUserAgent(browserConfig.name),
            isValid: true,
        };
    };
    GoatScraper.prototype.setProxies = function (apiConfig) {
        if (!this.config.proxy && apiConfig.proxies.length) {
            this.config.proxy = typeUtils_1.randomElement(apiConfig.proxies);
        }
        else if (this.config.proxy && !apiConfig.proxies.length) {
            this.config.proxy = undefined;
        }
    };
    GoatScraper.prototype.search = function (searchTerm, apiConfig) {
        var _a, _b;
        return __awaiter(this, void 0, void 0, function () {
            var schema, query, request, res, resultArray;
            var _this = this;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        schema = {
                            product_template_id: superstruct_1.number(),
                            name: superstruct_1.string(),
                            sku: superstruct_1.string(),
                            product_category: superstruct_1.string(),
                            slug: superstruct_1.string(),
                            grid_picture_url: types_1.Optional(superstruct_1.string()),
                            retail_price_cents_usd: types_1.Optional(superstruct_1.number()),
                            retail_price_cents_eur: types_1.Optional(superstruct_1.number()),
                            brand_name: superstruct_1.string(),
                            store: types_1.Store,
                        };
                        query = encodeURIComponent(searchTerm);
                        return [4 /*yield*/, this.setUpConfig(apiConfig)];
                    case 1:
                        _c.sent();
                        request = function () { return __awaiter(_this, void 0, void 0, function () {
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0: return [4 /*yield*/, this.fetcher.sendRequest("https://2fwotdvm2o-dsn.algolia.net/1/indexes/*/queries?x-algolia-agent=Algolia%20for%20JavaScript%20(3.35.1)%3B%20Browser%20(lite)%3B%20JS%20Helper%20(3.2.2)%3B%20react%20(16.13.1)%3B%20react-instantsearch%20(6.8.2)&x-algolia-application-id=2FWOTDVM2O&x-algolia-api-key=ac96de6fef0e02bb95d433d8d5c7038a", 'POST', this.config.browser.headers.goat1, this.config.userAgent, this.config.cookie, "{\"requests\":[{\"indexName\":\"product_variants_v2\",\"params\":\"highlightPreTag=%3Cais-highlight-0000000000%3E&highlightPostTag=%3C%2Fais-highlight-0000000000%3E&distinct=true&query=" + query + "&maxValuesPerFacet=30&page=0&facets=%5B%22product_category%22%2C%22instant_ship_lowest_price_cents%22%2C%22single_gender%22%2C%22presentation_size%22%2C%22shoe_condition%22%2C%22brand_name%22%2C%22color%22%2C%22silhouette%22%2C%22designer%22%2C%22upper_material%22%2C%22midsole%22%2C%22category%22%2C%22release_date_name%22%5D&tagFilters=&facetFilters=%5B%5B%22product_category%3Ashoes%22%5D%5D\"},{\"indexName\":\"product_variants_v2\",\"params\":\"highlightPreTag=%3Cais-highlight-0000000000%3E&highlightPostTag=%3C%2Fais-highlight-0000000000%3E&distinct=true&query=yeezy&maxValuesPerFacet=30&page=0&hitsPerPage=1&attributesToRetrieve=%5B%5D&attributesToHighlight=%5B%5D&attributesToSnippet=%5B%5D&tagFilters=&analytics=false&clickAnalytics=false&facets=product_category\"}]}", this.config.proxy, 'json', apiConfig.isLoggingEnabled)];
                                    case 1: return [2 /*return*/, _a.sent()];
                                }
                            });
                        }); };
                        return [4 /*yield*/, this.getData(apiConfig, request)];
                    case 2:
                        res = _c.sent();
                        resultArray = typeUtils_1.convertToArray((_b = (_a = res === null || res === void 0 ? void 0 : res.results) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.hits, schema, {
                            store: types_1.GOAT,
                        }, function (element) { return element && element['product_category'] === 'shoes'; });
                        return [2 /*return*/, resultArray.map(function (val) {
                                var retailPrice = apiConfig.currency.code === 'EUR'
                                    ? val.retail_price_cents_eur
                                    : val.retail_price_cents_usd;
                                if (retailPrice) {
                                    retailPrice = retailPrice / 100;
                                }
                                return {
                                    name: val.name,
                                    sku: val.sku.toUpperCase().split(' ').join('-').trim(),
                                    slug: val.slug,
                                    retailPrice: retailPrice,
                                    brand: val.brand_name,
                                    store: val.store,
                                    imageURL: val.grid_picture_url,
                                    url: "https://" + val.store.id + ".com/sneakers/" + val.slug,
                                    sellUrl: "https://" + val.store.id + ".com/sneakers/" + val.slug,
                                    buyUrl: "https://" + val.store.id + ".com/sneakers/" + val.slug + "/buy?boxCondition=good_condition&",
                                    productId: "" + val.product_template_id,
                                };
                            })];
                }
            });
        });
    };
    GoatScraper.prototype.getItemPrices = function (storeInfo, apiConfig) {
        return __awaiter(this, void 0, void 0, function () {
            var pricesSchemaAsk, pricesSchemaBid, cookie, segments, requestAsks, requestBids, asksRes, bidsRes, err_7, asks, bids, mergedPrices, result;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        pricesSchemaAsk = {
                            size: superstruct_1.number(),
                            shoeCondition: superstruct_1.string(),
                            boxCondition: superstruct_1.string(),
                            instantShipLowestPriceCents: superstruct_1.type({
                                currency: types_1.CurrencyCode,
                                amount: types_1.Optional(superstruct_1.number()),
                            }),
                            lowestPriceCents: superstruct_1.type({
                                currency: types_1.CurrencyCode,
                                amount: types_1.Optional(superstruct_1.number()),
                            }),
                        };
                        pricesSchemaBid = {
                            size: superstruct_1.number(),
                            offerAmountCents: superstruct_1.type({
                                currency: superstruct_1.string(),
                                amount: types_1.Optional(superstruct_1.number()),
                            }),
                        };
                        return [4 /*yield*/, this.setUpConfig(apiConfig, storeInfo)];
                    case 1:
                        _a.sent();
                        cookie = this.config.cookie;
                        if (cookie) {
                            if (cookie.includes('currency')) {
                                segments = cookie.split(';');
                                cookie = segments
                                    .map(function (segment) {
                                    if (segment.includes('currency')) {
                                        return " currency=" + apiConfig.currency.code;
                                    }
                                    else {
                                        return segment;
                                    }
                                })
                                    .join(';');
                            }
                            else {
                                cookie += "; currency=" + apiConfig.currency.code;
                            }
                        }
                        else {
                            cookie = "currency=" + apiConfig.currency.code;
                        }
                        requestAsks = function () { return __awaiter(_this, void 0, void 0, function () {
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0: return [4 /*yield*/, this.fetcher.sendRequest("https://www.goat.com/web-api/v1/product_variants?productTemplateId=" + storeInfo.slug, 'GET', __assign(__assign({}, this.config.browser.headers.goat3), (this.config.csrf && {
                                            'x-csrf-token': this.config.csrf,
                                        })), this.config.userAgent, cookie, undefined, this.config.proxy, 'json', apiConfig.isLoggingEnabled)];
                                    case 1: return [2 /*return*/, _a.sent()];
                                }
                            });
                        }); };
                        requestBids = function () { return __awaiter(_this, void 0, void 0, function () {
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0: return [4 /*yield*/, this.fetcher.sendRequest("https://www.goat.com/api/v1/highest_offers?boxIssues=0&productTemplateId=" + storeInfo.slug, 'GET', __assign(__assign({}, this.config.browser.headers.goat3), (this.config.csrf && {
                                            'x-csrf-token': this.config.csrf,
                                        })), this.config.userAgent, cookie, undefined, this.config.proxy, 'json', apiConfig.isLoggingEnabled)];
                                    case 1: 
                                    // '"GOAT/2.45.1 (iPhone; iOS 14.2.1; Scale/3.00) Locale/en"',
                                    return [2 /*return*/, _a.sent()];
                                }
                            });
                        }); };
                        return [4 /*yield*/, this.getData(apiConfig, requestAsks, storeInfo)];
                    case 2:
                        asksRes = _a.sent();
                        _a.label = 3;
                    case 3:
                        _a.trys.push([3, 5, , 6]);
                        return [4 /*yield*/, this.getData(apiConfig, requestBids, storeInfo)];
                    case 4:
                        bidsRes = _a.sent();
                        return [3 /*break*/, 6];
                    case 5:
                        err_7 = _a.sent();
                        typeUtils_1.log(err_7, apiConfig.isLoggingEnabled);
                        return [3 /*break*/, 6];
                    case 6:
                        asks = typeUtils_1.convertToArray(asksRes, pricesSchemaAsk, undefined, function (element) {
                            var _a;
                            return ((_a = element === null || element === void 0 ? void 0 : element.lowestPriceCents) === null || _a === void 0 ? void 0 : _a.amount) &&
                                (element === null || element === void 0 ? void 0 : element.shoeCondition) === 'new_no_defects' &&
                                (element === null || element === void 0 ? void 0 : element.boxCondition) === 'good_condition';
                        });
                        bids = [];
                        try {
                            bids = typeUtils_1.convertToArray(bidsRes, pricesSchemaBid, undefined, function (element) { var _a; return (_a = element === null || element === void 0 ? void 0 : element.offerAmountCents) === null || _a === void 0 ? void 0 : _a.amount; });
                        }
                        catch (err) {
                            bids = [];
                            typeUtils_1.log(err, apiConfig.isLoggingEnabled);
                        }
                        mergedPrices = asks
                            .map(function (ask) {
                            return { ask: ask, bid: bids.find(function (bid) { return bid.size === ask.size; }) };
                        })
                            .map(function (_a) {
                            var _b, _c, _d, _e;
                            var ask = _a.ask, bid = _a.bid;
                            return {
                                size: 'US' + ("" + ask.size).toUpperCase(),
                                currencyCode: (_b = ask.lowestPriceCents) === null || _b === void 0 ? void 0 : _b.currency,
                                lowestAsk: {
                                    noFees: ((_d = (_c = ask.lowestPriceCents) === null || _c === void 0 ? void 0 : _c.amount) !== null && _d !== void 0 ? _d : 0) / 100,
                                },
                                highestBid: { noFees: ((_e = bid === null || bid === void 0 ? void 0 : bid.offerAmountCents.amount) !== null && _e !== void 0 ? _e : 0) / 100 },
                                shoeCondition: ask.shoeCondition,
                                boxCondition: ask.boxCondition,
                                tags: [],
                            };
                        });
                        result = {
                            store: types_1.GOAT,
                            retailPrice: null,
                            inventory: mergedPrices,
                        };
                        return [2 /*return*/, result];
                }
            });
        });
    };
    return GoatScraper;
}());
exports.default = new GoatScraper();
//# sourceMappingURL=goat.js.map