"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.nodeFetcher = exports.nodeAPI = void 0;
var utils_1 = require("./utils");
var sneakerAPI_1 = require("./sneakerAPI");
var node_fetch_1 = require("node-fetch");
var typeUtils_1 = require("./typeUtils");
var HttpsProxyAgent = require('https-proxy-agent');
var fast_xml_parser_1 = require("fast-xml-parser");
var typeUtils_2 = require("./typeUtils");
var NodeFetcher = /** @class */ (function () {
    function NodeFetcher() {
    }
    NodeFetcher.prototype.sendRequest = function (url, method, headers, userAgent, cookie, body, proxy, responseType, isLoggingEnabled) {
        return __awaiter(this, void 0, void 0, function () {
            var request, res, text, err_1;
            var _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _b.trys.push([0, 5, , 6]);
                        if (proxy) {
                            typeUtils_2.log('using proxy: ' + typeUtils_1.stringify(proxy), isLoggingEnabled !== null && isLoggingEnabled !== void 0 ? isLoggingEnabled : false);
                        }
                        request = node_fetch_1.default.bind(null, url, __assign({ method: method, headers: __assign(__assign(__assign({}, headers), (_a = {}, _a['user-agent'] = userAgent, _a)), (cookie && {
                                cookie: cookie,
                            })), body: body }, (proxy && {
                            agent: new HttpsProxyAgent(typeUtils_1.stringify(proxy)),
                        })));
                        return [4 /*yield*/, utils_1.retry(request, url, !!isLoggingEnabled)];
                    case 1:
                        res = _b.sent();
                        if (!(responseType === 'text' || responseType === 'xml')) return [3 /*break*/, 3];
                        return [4 /*yield*/, res.text()];
                    case 2:
                        text = _b.sent();
                        if (responseType === 'xml') {
                            return [2 /*return*/, fast_xml_parser_1.parse(text, {
                                    ignoreAttributes: false,
                                    parseAttributeValue: true,
                                    attributeNamePrefix: '',
                                })];
                        }
                        else {
                            return [2 /*return*/, text];
                        }
                        return [3 /*break*/, 4];
                    case 3:
                        if (responseType === 'json') {
                            return [2 /*return*/, res.json()];
                        }
                        else {
                            return [2 /*return*/, res];
                        }
                        _b.label = 4;
                    case 4: return [3 /*break*/, 6];
                    case 5:
                        err_1 = _b.sent();
                        utils_1.handleError(err_1);
                        throw err_1;
                    case 6: return [2 /*return*/];
                }
            });
        });
    };
    return NodeFetcher;
}());
var nodeFetcher = new NodeFetcher();
exports.nodeFetcher = nodeFetcher;
var nodeAPI = new sneakerAPI_1.SneakerFetcher();
exports.nodeAPI = nodeAPI;
nodeAPI.set(nodeFetcher);
//# sourceMappingURL=node.js.map