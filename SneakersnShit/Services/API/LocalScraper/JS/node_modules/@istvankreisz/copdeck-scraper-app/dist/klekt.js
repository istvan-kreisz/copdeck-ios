"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var types_1 = require("./types");
var typeUtils_1 = require("./typeUtils");
var superstruct_1 = require("superstruct");
var browserConfigs_1 = require("./browserConfigs");
var KlektScraper = /** @class */ (function () {
    function KlektScraper() {
        var _this = this;
        this.store = 'klekt';
        this.getData = function (apiConfig, request) { return __awaiter(_this, void 0, void 0, function () {
            var res, err_1, err_2, err_3;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 13]);
                        return [4 /*yield*/, request()];
                    case 1:
                        res = _a.sent();
                        return [3 /*break*/, 13];
                    case 2:
                        err_1 = _a.sent();
                        this.config.isValid = false;
                        this.setUpConfig(apiConfig);
                        _a.label = 3;
                    case 3:
                        _a.trys.push([3, 6, , 12]);
                        return [4 /*yield*/, typeUtils_1.randomDelay()];
                    case 4:
                        _a.sent();
                        return [4 /*yield*/, request()];
                    case 5:
                        res = _a.sent();
                        return [3 /*break*/, 12];
                    case 6:
                        err_2 = _a.sent();
                        this.config.isValid = false;
                        this.setUpConfig(apiConfig);
                        _a.label = 7;
                    case 7:
                        _a.trys.push([7, 10, , 11]);
                        return [4 /*yield*/, typeUtils_1.randomDelay()];
                    case 8:
                        _a.sent();
                        return [4 /*yield*/, request()];
                    case 9:
                        res = _a.sent();
                        return [3 /*break*/, 11];
                    case 10:
                        err_3 = _a.sent();
                        typeUtils_1.log('failed request', apiConfig.isLoggingEnabled);
                        typeUtils_1.log(err_3, apiConfig.isLoggingEnabled);
                        this.config.isValid = false;
                        throw err_3;
                    case 11: return [3 /*break*/, 12];
                    case 12: return [3 /*break*/, 13];
                    case 13: return [2 /*return*/, res];
                }
            });
        }); };
        this.generateNewConfig();
    }
    KlektScraper.prototype.set = function (fetcher) {
        this.fetcher = fetcher;
    };
    KlektScraper.prototype.generateNewConfig = function () {
        var browserConfig = typeUtils_1.randomElement(browserConfigs_1.browsers);
        this.config = {
            browser: browserConfig,
            userAgent: typeUtils_1.getUserAgent(browserConfig.name),
            isValid: true,
        };
    };
    KlektScraper.prototype.setProxies = function (apiConfig) {
        if (!this.config.proxy && apiConfig.proxies.length) {
            this.config.proxy = typeUtils_1.randomElement(apiConfig.proxies);
        }
        else if (this.config.proxy && !apiConfig.proxies.length) {
            this.config.proxy = undefined;
        }
    };
    KlektScraper.prototype.setUpConfig = function (apiConfig) {
        this.setProxies(apiConfig);
        if (!this.config.isValid) {
            this.generateNewConfig();
        }
    };
    KlektScraper.prototype.vendureToken = function (currency) {
        switch (currency.code) {
            case 'EUR':
                return 'iqrhumfu2u9mumwq369';
            case 'USD':
                return '7bjy9qjpxwipr60h3s';
            case 'GBP':
                return 'ghvcjgf2yppe0w7kpacn';
        }
    };
    KlektScraper.prototype.search = function (searchTerm, apiConfig) {
        var _a, _b;
        return __awaiter(this, void 0, void 0, function () {
            var schema, request, res, resultArray;
            var _this = this;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        schema = {
                            productName: superstruct_1.string(),
                            styleCode: superstruct_1.string(),
                            productId: superstruct_1.string(),
                            slug: superstruct_1.string(),
                            productAsset: types_1.Optional(superstruct_1.type({
                                preview: superstruct_1.string(),
                            })),
                            brandNames: superstruct_1.array(superstruct_1.string()),
                            categoryNames: superstruct_1.array(superstruct_1.string()),
                            store: types_1.Store,
                        };
                        request = function () { return __awaiter(_this, void 0, void 0, function () {
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0: return [4 /*yield*/, this.fetcher.sendRequest("https://apiv2.klekt.com/shop-api?vendure-token=" + this.vendureToken(apiConfig.currency), 'POST', this.config.browser.headers.klekt1, this.config.userAgent, this.config.cookie, "{\"operationName\":\"SearchProducts\",\"variables\":{\"input\":{\"term\":\"" + searchTerm + "\",\"sizeType\":null,\"facetValueIds\":[],\"groupByProduct\":true,\"facetSlugs\":[],\"availability\":\"available\",\"take\":48,\"skip\":0,\"sort\":{\"featured\":\"DESC\"}}},\"query\":\"query SearchProducts($input: SearchInput!) {\\n                            search(input: $input) {\\n                              items {\\n                                productId\\n                                styleCode\\n                                slug\\n                                categoryNames\\n                                brandNames\\n                                brandLineNames\\n                                productName\\n                                description\\n                                variantsCount\\n                                sameDayShipping\\n                                sdsPriceWithTaxMin\\n                                customMappings {\\n                                          ...on CustomProductMappings {\\n                                              featured\\n                                              new\\n                                          }\\n                                  }\\n                                  priceWithTax {\\n                                          ... on PriceRange {\\n                                          min\\n                                          max\\n                                          __typename\\n                                      }\\n                                      __typename\\n                                  }\\n                                  productAsset {\\n                                          id\\n                                          preview\\n                                          focalPoint {\\n                                          x\\n                                          y\\n                                          __typename\\n                                      }\\n                                      __typename\\n                                  }\\n                                  __typename\\n                              }\\n                          totalItems\\n                          prices{\\n                                 rangeWithTax{\\n                                 min\\n                                 max\\n                             }\\n                        }\\n                            facetValues {\\n                                count\\n                                facetValue {\\n                                  id\\n                                  name\\n                                  facet {\\n                                    id\\n                                    name \\n                                    code\\n                                    __typename\\n                              }\\n                              __typename\\n                        }\\n                            __typename\\n                        }\\n                          __typename\\n                        }\\n                        }\\n                        \"}", this.config.proxy, 'json', apiConfig.isLoggingEnabled)];
                                    case 1: return [2 /*return*/, _a.sent()];
                                }
                            });
                        }); };
                        this.setUpConfig(apiConfig);
                        return [4 /*yield*/, this.getData(apiConfig, request)];
                    case 1:
                        res = _c.sent();
                        resultArray = typeUtils_1.convertToArray((_b = (_a = res === null || res === void 0 ? void 0 : res.data) === null || _a === void 0 ? void 0 : _a.search) === null || _b === void 0 ? void 0 : _b.items, schema, {
                            store: types_1.KLEKT,
                        }, function (element) {
                            return element.categoryNames &&
                                element.categoryNames.length &&
                                element.categoryNames.includes('Sneakers');
                        });
                        return [2 /*return*/, resultArray.map(function (val) {
                                var _a;
                                return {
                                    name: val.productName,
                                    sku: val.styleCode.trim().toUpperCase(),
                                    slug: val.slug,
                                    retailPrice: undefined,
                                    brand: val.brandNames[0],
                                    store: val.store,
                                    imageURL: (_a = val.productAsset) === null || _a === void 0 ? void 0 : _a.preview,
                                    url: "https://" + val.store.id + ".com/product/" + val.slug,
                                    sellUrl: "https://" + val.store.id + ".com/sell/find-product/?query=" + val.slug.replace('-', '+'),
                                    buyUrl: "https://" + val.store.id + ".com/product/" + val.slug,
                                    productId: val.productId,
                                };
                            })];
                }
            });
        });
    };
    KlektScraper.prototype.getItemPrices = function (storeInfo, apiConfig) {
        var _a, _b;
        return __awaiter(this, void 0, void 0, function () {
            var pricesSchema, request, res, prices;
            var _this = this;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        pricesSchema = {
                            currencyCode: types_1.CurrencyCode,
                            priceWithTax: superstruct_1.number(),
                            facetValues: superstruct_1.array(superstruct_1.type({ name: superstruct_1.string() })),
                            availableCount: superstruct_1.number(),
                        };
                        this.setUpConfig(apiConfig);
                        request = function () { return __awaiter(_this, void 0, void 0, function () {
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0: return [4 /*yield*/, this.fetcher.sendRequest("https://apiv2.klekt.com/shop-api?vendure-token=" + this.vendureToken(apiConfig.currency), 'POST', this.config.browser.headers.klekt2, this.config.userAgent, this.config.cookie, "{\"query\":\"query {\\n            productDetails(id: " + storeInfo.productId + ") {\\n          \\n              name\\n              id\\n              slug\\n              description\\n              featuredAsset {\\n                preview\\n              }\\n              assets {\\n                asset {\\n                    id\\n                    preview\\n                    name\\n                }\\n                position\\n              } \\n              customFields {\\n                new\\n                featured\\n                styleCode\\n              }\\n              variants {\\n                id\\n                customFields {\\n                    sameDayShipping\\n                } \\n                availableCount\\n                currencyCode\\n                priceWithTax\\n                facetValues {\\n                  code\\n                  name\\n                  id\\n                  facet {\\n                    code\\n                  }\\n                }\\n              }\\n              \\n             variantsNDD {\\n                id\\n                customFields {\\n                    sameDayShipping\\n                } \\n                availableCount\\n                priceWithTax\\n                facetValues {\\n                  code\\n                  name\\n                  id\\n                  facet {\\n                    code\\n                  }\\n                }\\n              }\\n              \\n            }\\n          }\\n  \"}", this.config.proxy, 'json', apiConfig.isLoggingEnabled)];
                                    case 1: return [2 /*return*/, _a.sent()];
                                }
                            });
                        }); };
                        this.setUpConfig(apiConfig);
                        return [4 /*yield*/, this.getData(apiConfig, request)];
                    case 1:
                        res = _c.sent();
                        prices = typeUtils_1.convertToArray((_b = (_a = res === null || res === void 0 ? void 0 : res.data) === null || _a === void 0 ? void 0 : _a.productDetails) === null || _b === void 0 ? void 0 : _b.variants, pricesSchema, undefined, function (element) {
                            return typeof element['availableCount'] === 'number' && element.availableCount > 0;
                        }).map(function (element) {
                            return {
                                size: element.facetValues[0].name.toUpperCase(),
                                currencyCode: element.currencyCode,
                                lowestAsk: { noFees: element.priceWithTax / 100 },
                                highestBid: null,
                                tags: [],
                            };
                        });
                        return [2 /*return*/, {
                                store: types_1.KLEKT,
                                retailPrice: null,
                                inventory: prices,
                            }];
                }
            });
        });
    };
    return KlektScraper;
}());
exports.default = new KlektScraper();
//# sourceMappingURL=klekt.js.map