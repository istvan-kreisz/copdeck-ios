"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var types_1 = require("./types");
var typeUtils_1 = require("./typeUtils");
var utils_1 = require("./utils");
var superstruct_1 = require("superstruct");
var browserConfigs_1 = require("./browserConfigs");
var StockXScraper = /** @class */ (function () {
    function StockXScraper() {
        var _this = this;
        this.store = 'stockx';
        this.sendDummyRequest = function (query, apiConfig) { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.fetcher.sendRequest("https://stockx.com/search?s=" + query, 'GET', this.config.browser.headers.stockx1, this.config.userAgent, undefined, undefined, this.config.proxy, undefined, apiConfig.isLoggingEnabled)];
            });
        }); };
        this.resetConfig = function (query, apiConfig, forced) { return __awaiter(_this, void 0, void 0, function () {
            var cookie;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (forced) {
                            this.generateNewConfig();
                        }
                        return [4 /*yield*/, utils_1.getSetCookieHeader(this.sendDummyRequest(query, apiConfig))];
                    case 1:
                        cookie = _a.sent();
                        this.config.cookie = cookie.cookie;
                        return [2 /*return*/];
                }
            });
        }); };
        this.setCookies = function (query, apiConfig) { return __awaiter(_this, void 0, void 0, function () {
            var err_1, err_2, err_3;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 11]);
                        return [4 /*yield*/, this.resetConfig(query, apiConfig, false)];
                    case 1:
                        _a.sent();
                        typeUtils_1.log('got it 1', apiConfig.isLoggingEnabled);
                        return [3 /*break*/, 11];
                    case 2:
                        err_1 = _a.sent();
                        _a.label = 3;
                    case 3:
                        _a.trys.push([3, 5, , 10]);
                        return [4 /*yield*/, this.resetConfig(query, apiConfig, true)];
                    case 4:
                        _a.sent();
                        typeUtils_1.log('got it 2', apiConfig.isLoggingEnabled);
                        return [3 /*break*/, 10];
                    case 5:
                        err_2 = _a.sent();
                        _a.label = 6;
                    case 6:
                        _a.trys.push([6, 8, , 9]);
                        return [4 /*yield*/, this.resetConfig(query, apiConfig, true)];
                    case 7:
                        _a.sent();
                        typeUtils_1.log('got it 3', apiConfig.isLoggingEnabled);
                        return [3 /*break*/, 9];
                    case 8:
                        err_3 = _a.sent();
                        typeUtils_1.log("failed to fetch cookies", apiConfig.isLoggingEnabled);
                        typeUtils_1.log(err_3, apiConfig.isLoggingEnabled);
                        return [3 /*break*/, 9];
                    case 9: return [3 /*break*/, 10];
                    case 10: return [3 /*break*/, 11];
                    case 11: return [2 /*return*/];
                }
            });
        }); };
        this.setUpConfig = function (query, apiConfig) { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.setProxies(apiConfig);
                        if (!this.config.isValid) return [3 /*break*/, 4];
                        if (!this.config.cookie) return [3 /*break*/, 1];
                        return [2 /*return*/];
                    case 1: return [4 /*yield*/, this.setCookies(query, apiConfig)];
                    case 2:
                        _a.sent();
                        _a.label = 3;
                    case 3: return [3 /*break*/, 6];
                    case 4:
                        this.generateNewConfig();
                        return [4 /*yield*/, this.setCookies(query, apiConfig)];
                    case 5:
                        _a.sent();
                        _a.label = 6;
                    case 6: return [2 /*return*/];
                }
            });
        }); };
        this.getData = function (query, apiConfig, request) { return __awaiter(_this, void 0, void 0, function () {
            var res, err_4, err_5;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 9]);
                        return [4 /*yield*/, request()];
                    case 1:
                        res = _a.sent();
                        return [3 /*break*/, 9];
                    case 2:
                        err_4 = _a.sent();
                        this.config.isValid = false;
                        return [4 /*yield*/, this.setUpConfig(query, apiConfig)];
                    case 3:
                        _a.sent();
                        _a.label = 4;
                    case 4:
                        _a.trys.push([4, 7, , 8]);
                        return [4 /*yield*/, typeUtils_1.randomDelay()];
                    case 5:
                        _a.sent();
                        return [4 /*yield*/, request()];
                    case 6:
                        res = _a.sent();
                        return [3 /*break*/, 8];
                    case 7:
                        err_5 = _a.sent();
                        typeUtils_1.log('failed request', apiConfig.isLoggingEnabled);
                        typeUtils_1.log(err_5, apiConfig.isLoggingEnabled);
                        this.config.isValid = false;
                        throw err_5;
                    case 8: return [3 /*break*/, 9];
                    case 9: return [2 /*return*/, res];
                }
            });
        }); };
        this.generateNewConfig();
    }
    StockXScraper.prototype.set = function (fetcher) {
        this.fetcher = fetcher;
    };
    StockXScraper.prototype.generateNewConfig = function () {
        var browserConfig = typeUtils_1.randomElement(browserConfigs_1.browsers);
        this.config = {
            browser: browserConfig,
            userAgent: typeUtils_1.getUserAgent(browserConfig.name),
            isValid: true,
        };
    };
    StockXScraper.prototype.setProxies = function (apiConfig) {
        if (!this.config.proxy && apiConfig.proxies.length) {
            this.config.proxy = typeUtils_1.randomElement(apiConfig.proxies);
        }
        else if (this.config.proxy && !apiConfig.proxies.length) {
            this.config.proxy = undefined;
        }
    };
    StockXScraper.prototype.search = function (searchTerm, apiConfig) {
        return __awaiter(this, void 0, void 0, function () {
            var schema, query, request, res, resultArray;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        schema = {
                            title: superstruct_1.string(),
                            styleId: superstruct_1.string(),
                            productCategory: superstruct_1.string(),
                            id: superstruct_1.string(),
                            urlKey: superstruct_1.string(),
                            colorway: superstruct_1.string(),
                            media: superstruct_1.type({
                                imageUrl: superstruct_1.string(),
                            }),
                            retailPrice: superstruct_1.number(),
                            brand: superstruct_1.string(),
                            store: types_1.Store,
                        };
                        query = encodeURIComponent(searchTerm);
                        return [4 /*yield*/, this.setUpConfig(query, apiConfig)];
                    case 1:
                        _a.sent();
                        request = function () { return __awaiter(_this, void 0, void 0, function () {
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0: return [4 /*yield*/, this.fetcher.sendRequest("https://stockx.com/api/browse?&currency=" + apiConfig.currency.code + "&_search=" + query + "&dataType=product", 'GET', this.config.browser.headers.stockx2, this.config.userAgent, this.config.cookie, undefined, this.config.proxy, 'json', apiConfig.isLoggingEnabled)];
                                    case 1: return [2 /*return*/, _a.sent()];
                                }
                            });
                        }); };
                        return [4 /*yield*/, this.getData(query, apiConfig, request)];
                    case 2:
                        res = _a.sent();
                        resultArray = typeUtils_1.convertToArray(res === null || res === void 0 ? void 0 : res.Products, schema, {
                            store: types_1.STOCKX,
                        }, function (element) { return element && !element.hidden && element['productCategory'] === 'sneakers'; });
                        return [2 /*return*/, resultArray.map(function (val) {
                                return {
                                    name: val.title,
                                    sku: (val.styleId || val.colorway).trim().toUpperCase(),
                                    slug: val.id,
                                    retailPrice: val.retailPrice,
                                    brand: val.brand,
                                    store: val.store,
                                    imageURL: val.media.imageUrl,
                                    url: "https://" + val.store.id + ".com/" + val.urlKey,
                                    sellUrl: "https://" + val.store.id + ".com/sell/" + val.urlKey,
                                    buyUrl: "https://" + val.store.id + ".com/buy/" + val.urlKey + "?",
                                    productId: val.id,
                                };
                            })];
                }
            });
        });
    };
    StockXScraper.prototype.getItemPrices = function (storeInfo, apiConfig) {
        return __awaiter(this, void 0, void 0, function () {
            var pricesSchema, ItemData, request, res, item, stockXPrices, prices, result;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        pricesSchema = {
                            shoeSize: superstruct_1.string(),
                            sizeLocale: superstruct_1.string(),
                            market: superstruct_1.type({
                                lowestAsk: superstruct_1.number(),
                                highestBid: superstruct_1.number(),
                            }),
                        };
                        ItemData = superstruct_1.type({
                            retailPrice: superstruct_1.number(),
                        });
                        return [4 /*yield*/, this.setUpConfig('yeezy', apiConfig)];
                    case 1:
                        _a.sent();
                        request = function () { return __awaiter(_this, void 0, void 0, function () {
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0: return [4 /*yield*/, this.fetcher.sendRequest("https://stockx.com/api/products/" + storeInfo.slug + "?includes=market&currency=" + apiConfig.currency.code, 'GET', this.config.browser.headers.stockx3, this.config.userAgent, this.config.cookie, undefined, this.config.proxy, 'json', apiConfig.isLoggingEnabled)];
                                    case 1: return [2 /*return*/, _a.sent()];
                                }
                            });
                        }); };
                        return [4 /*yield*/, this.getData('jord', apiConfig, request)];
                    case 2:
                        res = _a.sent();
                        item = res === null || res === void 0 ? void 0 : res.Product;
                        stockXPrices = item === null || item === void 0 ? void 0 : item.children;
                        superstruct_1.assert(stockXPrices, superstruct_1.object());
                        prices = typeUtils_1.convertToArray(Object.values(stockXPrices), pricesSchema).map(function (element) {
                            return {
                                size: element.sizeLocale.toUpperCase() + element.shoeSize,
                                currencyCode: apiConfig.currency.code,
                                lowestAsk: { noFees: element.market.lowestAsk },
                                highestBid: { noFees: element.market.highestBid },
                                tags: [],
                            };
                        });
                        result = {
                            retailPrice: null,
                            store: types_1.STOCKX,
                            inventory: prices,
                        };
                        if (superstruct_1.is(item, ItemData)) {
                            result.retailPrice = item.retailPrice;
                        }
                        return [2 /*return*/, result];
                }
            });
        });
    };
    return StockXScraper;
}());
exports.default = new StockXScraper();
//# sourceMappingURL=stockx.js.map